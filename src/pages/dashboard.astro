---
import Layout from "../layouts/Layout.astro";
import "../styles/global.css";
import activities from "../data/activities.json";
import transactions from "../data/transactions.json";
const title = "Panel de Control";

// get the name of the user from localStorage (browser only)
const stats = { users: 10000, revenue: "$100,000", growth: "22%" };

if (typeof window !== "undefined") {
  const item = localStorage.getItem("item");
  console.log(item);
}
---

<Layout title={title}>
  <div
    class="flex min-h-screen bg-gradient-to-br from-gray-100 via-gray-200 to-gray-300 dark:from-gray-900 dark:via-gray-800 dark:to-gray-700"
  >
    {/* Sidebar Container */}
    <div class="flex-shrink-0">
      {/* Mobile Sidebar Toggle Button */}
      <button
        id="sidebar-toggle"
        type="button"
        class="md:hidden fixed top-4 left-4 z-30 p-2 rounded bg-white dark:bg-gray-900 shadow focus:outline-none"
        aria-label="Abrir menú"
        onclick="document.getElementById('sidebar').classList.toggle('hidden')"
      >
        <svg
          class="w-6 h-6 text-gray-700 dark:text-gray-200"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>

      {/* Sidebar */}
      <aside
        id="sidebar"
        class="fixed md:static top-0 left-0 h-full w-64 bg-white dark:bg-gray-900 shadow-md px-6 py-8 z-20 transition-transform duration-200 md:block hidden flex flex-col justify-between"
        style="overflow-y: auto;"
      >
        <nav class="flex flex-col h-full">
          <ul class="space-y-4 flex-1">
            <li>
              <a
                href="#"
                class="block text-lg font-semibold text-gray-700 dark:text-gray-200 hover:text-blue-600 dark:hover:text-blue-400"
                >Invertir</a
              >
            </li>
            <li>
              <a
                href="#"
                class="block text-lg font-semibold text-gray-700 dark:text-gray-200 hover:text-blue-600 dark:hover:text-blue-400"
                >Órdenes</a
              >
            </li>
          </ul>
          <div class="w-full">
            <form action="/TSI-Group/login" method="get">
              <button
                type="submit"
                class="w-full text-left block text-lg font-semibold text-gray-700 dark:text-gray-200 hover:text-red-600 dark:hover:text-red-400 hover:cursor-pointer relative z-10"
                style="pointer-events: auto;"
              >
                Cerrar sesión
              </button>
            </form>
          </div>
        </nav>
      </aside>
      <script is:inline>
        // Hide sidebar when clicking outside (on mobile)
        document.addEventListener("click", function (e) {
          const sidebar = document.getElementById("sidebar");
          const toggle = document.getElementById("sidebar-toggle");
          if (!sidebar || !toggle) return;
          if (
            !sidebar.classList.contains("hidden") &&
            !sidebar.contains(e.target) &&
            !toggle.contains(e.target) &&
            window.innerWidth < 768
          ) {
            sidebar.classList.add("hidden");
          }
        });
        // Ensure sidebar is visible on resize for md+
        window.addEventListener("resize", function () {
          const sidebar = document.getElementById("sidebar");
          if (!sidebar) return;
          if (window.innerWidth >= 768) {
            sidebar.classList.remove("hidden");
          } else {
            sidebar.classList.add("hidden");
          }
        });
        // Hide sidebar by default on mobile
        if (window.innerWidth < 768) {
          document.getElementById("sidebar")?.classList.add("hidden");
        }
      </script>
      <style is:inline>
        /* Prevent main hover effects from affecting sidebar logout button */
        #sidebar button[type="submit"] {
          position: relative;
          z-index: 10;
          pointer-events: auto;
        }
        /* Make sidebar static and scrollable, main scrolls independently */
        @media (min-width: 768px) {
          #sidebar {
            position: static !important;
            height: 100vh;
            min-height: 100vh;
            max-height: 100vh;
            overflow-y: auto;
          }
        }
      </style>
    </div>
    {/* Main Content */}
    <main
      class="flex-1 px-6 py-8 flex flex-col gap-4 overflow-y-auto h-screen md:h-screen"
      style="max-height: 100vh;"
    >
      <div class="md:ml-0 ml-14">
        <h1
          class="text-3xl font-bold text-gray-800 dark:text-gray-100 mb-4 mt-2 md:mt-0 transition-all duration-200"
        >
          Panel de Control
        </h1>
        <p
          class="text-gray-600 dark:text-gray-300 mb-8 transition-all duration-200"
        >
          {/* Extrae el nombre del usuario desde localStorage (browser only) */}
          <script is:inline>
            document.addEventListener("DOMContentLoaded", function () {
              let userName = "Usuario";
              if (typeof window !== "undefined") {
                const user = localStorage.getItem("registeredUser");
                if (user) {
                  try {
                    const parsed = JSON.parse(user);
                    if (parsed && parsed.name) {
                      userName = parsed.name;
                    }
                  } catch (e) {
                    userName = user;
                  }
                  // Replace underscores with spaces if present
                  if (typeof userName === "string") {
                    userName = userName.replace(/_/g, " ");
                  }
                }
                document
                  .getElementById("welcome-msg")
                  ?.replaceChildren(
                    document.createTextNode(
                      `¡Bienvenido a tu panel de control, ${userName}!`
                    )
                  );
              }
            });
          </script>
          <span id="welcome-msg">¡Bienvenido a tu panel de control!</span>
        </p>
      </div>

      <div class="flex flex-col md:flex-row gap-6">
        {/* Stats Column */}
        <div
          class="flex-1 bg-white dark:bg-gray-900 rounded-lg shadow p-6 mb-6 md:mb-0"
        >
          <h2 class="text-xl font-semibold mb-2 dark:text-gray-100">
            Estadísticas
          </h2>
          <div class="flex flex-col space-y-4">
            <div
              class="bg-blue-100 dark:bg-blue-900 rounded-lg p-4 flex items-center shadow"
            >
              <div class="flex-1">
                <div
                  class="text-sm text-blue-700 dark:text-blue-200 font-semibold"
                >
                  Usuarios
                </div>
                <div
                  class="text-2xl font-bold text-blue-900 dark:text-blue-100"
                >
                  {stats.users}
                </div>
              </div>
            </div>
            <div
              class="bg-green-100 dark:bg-green-900 rounded-lg p-4 flex items-center shadow"
            >
              <div class="flex-1">
                <div
                  class="text-sm text-green-700 dark:text-green-200 font-semibold"
                >
                  Ingresos
                </div>
                <div
                  class="text-2xl font-bold text-green-900 dark:text-green-100"
                >
                  {stats.revenue}
                </div>
              </div>
            </div>
            <div
              class="bg-yellow-100 dark:bg-yellow-900 rounded-lg p-4 flex items-center shadow"
            >
              <div class="flex-1">
                <div
                  class="text-sm text-yellow-700 dark:text-yellow-200 font-semibold"
                >
                  Crecimiento
                </div>
                <div
                  class="text-2xl font-bold text-yellow-900 dark:text-yellow-100"
                >
                  {stats.growth}
                </div>
              </div>
            </div>
          </div>
        </div>
        {/* Recent Activity Column */}
        <div
          class="flex-1 bg-white dark:bg-gray-900 rounded-lg shadow p-6 mb-6 md:mb-0"
        >
          <h2 class="text-xl font-semibold mb-2 dark:text-gray-100">
            Actividad Reciente
          </h2>
          <ul class="text-gray-500 dark:text-gray-300 space-y-1">
            {
              activities.map((activity) => (
                <li class="flex items-center bg-gray-100 dark:bg-gray-800 rounded-lg px-4 py-2 shadow-sm mb-2">
                  <span class="flex-1 text-gray-700 dark:text-gray-200">
                    {activity.description}
                  </span>
                  <span class="ml-4 text-xs text-gray-400 bg-gray-200 dark:bg-gray-700 rounded px-2 py-0.5">
                    {new Date(activity.date).toLocaleString("es-ES", {
                      day: "2-digit",
                      month: "2-digit",
                      year: "numeric",
                      hour: "2-digit",
                      minute: "2-digit",
                      hour12: false,
                      timeZone: "UTC",
                    })}
                  </span>
                </li>
              ))
            }
          </ul>
        </div>
      </div>
      {/* ETH Price Graph Section */}
      <div class="bg-white dark:bg-gray-900 rounded-lg shadow p-6 mb-8">
        <h2 class="text-xl font-semibold mb-4 dark:text-gray-100">
          Precio de CluckinCoin
        </h2>
        <canvas id="ethChart" height="80"></canvas>
        <script is:inline>
          // Fetch ETH price history and render chart
          document.addEventListener("DOMContentLoaded", async function () {
            const ctx = document.getElementById("ethChart").getContext("2d");
            // Fetch last 7 days ETH price from CoinGecko
            const res = await fetch(
              "https://api.coingecko.com/api/v3/coins/ethereum/market_chart?vs_currency=usd&days=7"
            );
            const data = await res.json();
            const prices = data.prices || [];
            const labels = prices.map((p) => {
              const d = new Date(p[0]);
              return `${d.getDate()}/${d.getMonth() + 1}`;
            });
            const values = prices.map((p) => p[1]);
            // Load Chart.js from CDN if not present
            if (!window.Chart) {
              const script = document.createElement("script");
              script.src = "https://cdn.jsdelivr.net/npm/chart.js";
              script.onload = () => drawChart();
              document.body.appendChild(script);
            } else {
              drawChart();
            }
            function drawChart() {
              new window.Chart(ctx, {
                type: "line",
                data: {
                  labels,
                  datasets: [
                    {
                      label: "CluckinCoin/USD",
                      data: values,
                      borderColor: "#6366f1",
                      backgroundColor: "rgba(99,102,241,0.1)",
                      fill: true,
                      tension: 0.3,
                    },
                  ],
                },
                options: {
                  responsive: true,
                  plugins: {
                    legend: { display: true, labels: { color: "#374151" } },
                  },
                  scales: {
                    x: { ticks: { color: "#6b7280" } },
                    y: { ticks: { color: "#6b7280" } },
                  },
                },
              });
            }
          });
        </script>
      </div>
      {/* Transactions Section */}
      <div class="bg-white dark:bg-gray-900 rounded-lg shadow p-6 mb-8">
        <h2 class="text-xl font-semibold mb-4 dark:text-gray-100">
          Transacciones Recientes
        </h2>
        <div class="overflow-x-auto">
          <table
            class="min-w-full divide-y divide-gray-200 dark:divide-gray-700"
          >
            <thead>
              <tr>
                <th
                  class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  >Tipo</th
                >
                <th
                  class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  >Usuario</th
                >
                <th
                  class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  >Cantidad</th
                >
                <th
                  class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  >Fecha</th
                >
              </tr>
            </thead>
            <tbody
              class="bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700"
            >
              {
                transactions.map((tx, idx) => (
                  <tr
                    class={`hover:bg-gray-50 dark:hover:bg-gray-800 ${idx % 2 === 0 ? "bg-white dark:bg-gray-900" : "bg-gray-50 dark:bg-gray-800"}`}
                  >
                    <td class="px-4 py-2 whitespace-nowrap">
                      <span
                        class={`px-2 py-1 rounded text-xs font-semibold
                      ${
                        tx.type === "compra"
                          ? "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200"
                          : tx.type === "venta"
                            ? "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200"
                            : "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200"
                      }`}
                      >
                        {tx.type.charAt(0).toUpperCase() + tx.type.slice(1)}
                      </span>
                    </td>
                    <td class="px-4 py-2 whitespace-nowrap text-gray-700 dark:text-gray-200">
                      {tx.user}
                    </td>
                    <td class="px-4 py-2 whitespace-nowrap text-gray-700 dark:text-gray-200">
                      {tx.amount}
                    </td>
                    <td class="px-4 py-2 whitespace-nowrap text-gray-500 dark:text-gray-400">
                      {new Date(tx.timestamp).toLocaleString("es-ES", {
                        day: "2-digit",
                        month: "2-digit",
                        year: "numeric",
                        hour: "2-digit",
                        minute: "2-digit",
                        hour12: false,
                        timeZone: "UTC",
                      })}
                    </td>
                  </tr>
                ))
              }
            </tbody>
          </table>
        </div>
      </div>
    </main>
  </div>
  <style is:inline>
    html,
    body,
    #app,
    #__astro_root {
      height: 100%;
      min-height: 100%;
    }
    body {
      overflow: hidden;
    }
    main[role="main"],
    main {
      overflow-y: auto;
      height: 100vh;
      max-height: 100vh;
    }
    @media (max-width: 767px) {
      main[role="main"],
      main {
        height: auto;
        max-height: none;
      }
    }
  </style>
</Layout>
